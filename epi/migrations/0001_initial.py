# Generated by Django 5.2 on 2025-06-23 11:45

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EquipamentoSeguranca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_equipamento', models.CharField(max_length=100, verbose_name='Nome do Equipamento')),
                ('tipo', models.CharField(choices=[('CAP', 'Capacete'), ('LUV', 'Luva'), ('OCU', 'Óculos'), ('PRO', 'Protetor Auditivo'), ('CAL', 'Calçado'), ('VES', 'Vestuário'), ('OUT', 'Outros')], default='OUT', max_length=3, verbose_name='Tipo de Equipamento')),
                ('codigo_CA', models.CharField(blank=True, max_length=10, null=True, verbose_name='Código CA')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('quantidade_estoque', models.IntegerField(default=0, verbose_name='Quantidade em Estoque')),
                ('estoque_minimo', models.IntegerField(default=5, verbose_name='Estoque Mínimo')),
                ('data_validade', models.DateField(blank=True, null=True, verbose_name='Data de Validade')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo?')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('vida_util', models.PositiveIntegerField(default=12, help_text='Tempo de vida útil do equipamento em meses', verbose_name='Vida Útil (meses)')),
            ],
            options={
                'verbose_name': 'Equipamento de Segurança',
                'verbose_name_plural': 'Equipamentos de Segurança',
                'ordering': ['nome_equipamento'],
            },
        ),
        migrations.CreateModel(
            name='FichaEPI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cargo', models.CharField(help_text='Cargo/função do empregado', max_length=100, verbose_name='Cargo')),
                ('registro', models.CharField(help_text='Matrícula ou registro funcional', max_length=50, verbose_name='Registro')),
                ('admissao', models.DateField(verbose_name='Data de Admissão')),
                ('demissao', models.DateField(blank=True, null=True, verbose_name='Data de Demissão')),
                ('contrato', models.CharField(help_text='Tipo de contrato de trabalho', max_length=100, verbose_name='Contrato')),
                ('status', models.CharField(choices=[('ATIVO', 'Ativo'), ('INATIVO', 'Inativo'), ('AFASTADO', 'Afastado')], default='ATIVO', max_length=10, verbose_name='Status')),
                ('local_data', models.CharField(help_text='Local e data de emissão da ficha', max_length=100, verbose_name='Local e Data')),
                ('assinatura', models.ImageField(blank=True, null=True, upload_to='assinaturas/%Y/%m/', verbose_name='Assinatura Digital')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('atualizado_em', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
            ],
            options={
                'verbose_name': 'Ficha de EPI',
                'verbose_name_plural': 'Fichas de EPI',
                'db_table': 'ficha_epi',
                'ordering': ['-criado_em'],
            },
        ),
        migrations.CreateModel(
            name='ItemEPI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Quantidade')),
                ('data_recebimento', models.DateField(verbose_name='Data de Recebimento')),
                ('data_devolucao', models.DateField(blank=True, null=True, verbose_name='Data de Devolução')),
                ('data_validade', models.DateField(blank=True, help_text='Assinatura em base64', null=True, verbose_name='Data de Validade')),
                ('recebedor', models.CharField(blank=True, help_text='Nome do funcionário que recebeu o EPI', max_length=100, null=True, verbose_name='Recebedor')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
            ],
            options={
                'verbose_name': 'Item de EPI',
                'verbose_name_plural': 'Itens de EPI',
                'db_table': 'item_epi',
                'ordering': ['-data_recebimento'],
            },
        ),
        migrations.CreateModel(
            name='EPI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome completo do equipamento', max_length=100, verbose_name='Nome do EPI')),
                ('descricao', models.TextField(help_text='Descrição detalhada do EPI e sua finalidade', verbose_name='Descrição')),
                ('certificado', models.CharField(help_text='Número do CA (Certificado de Aprovação)', max_length=50, verbose_name='Certificado de Aprovação')),
                ('unidade', models.CharField(default='UN', help_text='Unidade de medida (UN, PAR, M, etc)', max_length=20, verbose_name='Unidade de Medida')),
                ('tipo', models.CharField(choices=[('PROT', 'Proteção'), ('SEG', 'Segurança'), ('HIG', 'Higiene'), ('OUT', 'Outros')], default='PROT', max_length=4, verbose_name='Tipo de EPI')),
                ('vida_util', models.PositiveIntegerField(default=12, help_text='Tempo de vida útil em meses', verbose_name='Vida Útil (meses)')),
                ('estoque_minimo', models.PositiveIntegerField(default=10, help_text='Quantidade mínima em estoque', verbose_name='Estoque Mínimo')),
                ('estoque_atual', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Estoque Atual')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo?')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
            ],
            options={
                'verbose_name': 'EPI',
                'verbose_name_plural': 'EPIs',
                'db_table': 'epi',
                'ordering': ['nome'],
                'indexes': [models.Index(fields=['nome'], name='idx_epi_nome'), models.Index(fields=['certificado'], name='idx_epi_ca')],
                'constraints': [models.UniqueConstraint(fields=('nome', 'certificado'), name='unique_epi_nome_certificado')],
            },
        ),
    ]
