# Generated by Django 5.2 on 2025-07-05 21:01

import datetime
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('logradouro', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Logradouro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome comercial do cliente', max_length=100, verbose_name='Nome Fantasia')),
                ('contrato', models.CharField(default='0000', help_text='Código de 4 dígitos do contrato', max_length=4, verbose_name='Número do Contrato (CM)')),
                ('razao_social', models.CharField(help_text='Nome legal da empresa', max_length=100, verbose_name='Razão Social')),
                ('unidade', models.PositiveIntegerField(blank=True, help_text='Número da unidade/filial, se aplicável', null=True, verbose_name='Unidade/Filial')),
                ('cnpj', models.CharField(help_text='Formato: 00.000.000/0000-00', max_length=18, unique=True, validators=[django.core.validators.RegexValidator(message='CNPJ deve estar no formato 00.000.000/0000-00 ou conter 14 dígitos', regex='^\\d{2}\\.\\d{3}\\.\\d{3}/\\d{4}-\\d{2}$|^\\d{14}$')], verbose_name='CNPJ')),
                ('telefone', models.CharField(blank=True, help_text='Formato: (00) 00000-0000', max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Telefone deve estar no formato (00) 00000-0000 ou conter 10/11 dígitos', regex='^\\(\\d{2}\\) \\d{4,5}-\\d{4}$|^\\d{10,11}$')], verbose_name='Telefone')),
                ('email', models.EmailField(blank=True, help_text='Endereço de e-mail para contato', max_length=100, null=True, validators=[django.core.validators.EmailValidator(message='Informe um endereço de email válido')], verbose_name='E-mail')),
                ('observacoes', models.TextField(blank=True, help_text='Informações adicionais sobre o cliente', null=True, verbose_name='Observações')),
                ('inscricao_estadual', models.CharField(blank=True, help_text='Número de inscrição estadual', max_length=20, null=True, verbose_name='Inscrição Estadual')),
                ('inscricao_municipal', models.CharField(blank=True, help_text='Número de inscrição municipal', max_length=20, null=True, verbose_name='Inscrição Municipal')),
                ('data_de_inicio', models.DateField(help_text='Data de início do contrato', verbose_name='Data de Início')),
                ('estatus', models.BooleanField(default=True, help_text='Indica se o cliente está ativo', verbose_name='Ativo?')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('data_encerramento', models.DateField(blank=True, null=True, verbose_name='Data de Encerramento')),
                ('logradouro', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='clientes', to='logradouro.logradouro', verbose_name='Endereço')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'db_table': 'cliente',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='ClienteCliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome ou identificação da unidade/filial', max_length=100, verbose_name='Nome da Unidade')),
                ('codigo', models.CharField(blank=True, help_text='Código interno da unidade', max_length=10, null=True, unique=True, verbose_name='Código da Unidade')),
                ('ativa', models.BooleanField(default=True, verbose_name='Ativa?')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unidades_cliente', to='cliente.cliente', verbose_name='Cliente Matriz')),
            ],
            options={
                'verbose_name': 'Unidade do Cliente',
                'verbose_name_plural': 'Unidades dos Clientes',
                'db_table': 'cliente_cliente',
                'ordering': ['cliente', 'nome'],
            },
        ),
        migrations.AddIndex(
            model_name='cliente',
            index=models.Index(fields=['cnpj'], name='idx_cliente_cnpj'),
        ),
        migrations.AddIndex(
            model_name='cliente',
            index=models.Index(fields=['estatus'], name='idx_cliente_status'),
        ),
        migrations.AddConstraint(
            model_name='cliente',
            constraint=models.UniqueConstraint(fields=('cnpj',), name='unique_cliente_cnpj'),
        ),
        migrations.AddConstraint(
            model_name='cliente',
            constraint=models.CheckConstraint(condition=models.Q(('data_de_inicio__lte', datetime.date(2025, 7, 5))), name='check_data_inicio_passado'),
        ),
        migrations.AddIndex(
            model_name='clientecliente',
            index=models.Index(fields=['cliente'], name='idx_clientecliente_cliente'),
        ),
    ]
