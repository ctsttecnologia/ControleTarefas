"""
Django settings for gerenciandoTarefas project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path
from decouple import config


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# --- CONFIGURAÇÕES DE SEGURANÇA ---

# Lidas diretamente do seu arquivo .env
SECRET_KEY = config('SECRET_KEY')
FERNET_KEYS = config('FERNET_KEYS') # Renomeei a variável para corresponder ao seu .env
FIELD_ENCRYPTION_KEY = config('FIELD_ENCRYPTION_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=False, cast=bool)

# ALLOWED_HOSTS
ALLOWED_HOSTS = config('ALLOWED_HOSTS', cast=lambda v: [s.strip() for s in v.split(',')])




CELERY_BROKER_URL = 'redis://localhost:6379/0'
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'America/Sao_Paulo'

# --- FIM DAS CONFIGURAÇÕES DE SEGURANÇA ---

# Application definition

INSTALLED_APPS = [
    # 1. Aplicativos do Framework Django (em ordem)
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'django_components',
    'django_extensions',
    'django_bootstrap5',
    'django_htmx',

    # 2. Aplicativos de Terceiros
    'rest_framework',
    'widget_tweaks',
    'crispy_forms',
    'crispy_bootstrap5',
    'localflavor',
    'template_partials',

    # 3. Seus Aplicativos Locais (em ordem de dependência)
    'usuario', 
    'home',
    'core',
    'logradouro',             # É uma dependência, deve vir antes               # Relacionado ao usuário
    'cliente',                # Depende de 'logradouro'
    'departamento_pessoal',   # Depende de 'cliente'
    'automovel.apps.AutomovelConfig',
    'seguranca_trabalho',
    'suprimentos',
    'tarefas.apps.TarefasConfig',
    'treinamentos.apps.TreinamentosConfig',
    'gestao_riscos',
    'ata_reuniao',
    'ferramentas',
    'controle_de_telefone',
    'phonenumber_field',
    'notifications',    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware', 
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_htmx.middleware.HtmxMiddleware',
]

ROOT_URLCONF = 'gerenciandoTarefas.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')], 
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'core.context_processors.filial_context',
                'usuario.context_processors.filial_context',                
            ],
        },
    },
]

CRISPY_TEMPLATE_PACK = 'bootstrap5'  # ou 'bootstrap4', dependendo da versão
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"

WSGI_APPLICATION = 'gerenciandoTarefas.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': config('DB_ENGINE'),
        'NAME': config('DB_NAME'),
        'USER': config('DB_USER'),
        'PASSWORD': config('DB_PASSWORD'),
        'HOST': config('DB_HOST'),
        'PORT': config('DB_PORT', cast=int), # `cast=int` já converte para inteiro
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
        }
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTH_USER_MODEL = 'usuario.Usuario'

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

# Em seu settings.py
LANGUAGE_CODE = 'pt-br'

USE_I18N = True # Habilita a internacionalização
USE_L10N = True # Habilita a localização (formato de datas, números, etc.)
USE_TZ = False

# Mude 'UTC' para o fuso horário do Brasil
TIME_ZONE = 'America/Sao_Paulo'


#Static files (CSS, JavaScript, Images)
#https://docs.djangoproject.com/en/5.1/howto/static-files/

BASE_DIR = Path(__file__).resolve().parent.parent


# Configurações para arquivos estáticos
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),  # Pasta local dos estáticos  
]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # Onde os estáticos serão coletados

# Diretório público para imagens, etc.
MEDIA_URL = '/midia/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'midia')

# Diretório PRIVADO para arquivos sensíveis
PRIVATE_MEDIA_ROOT = os.path.join(BASE_DIR, 'private_media')

# Configuração para servir arquivos privados com django-sendfile2
# Crie uma pasta 'private_media' na raiz do projeto
SENDFILE_BACKEND = 'sendfile2.backends.simple'
SENDFILE_ROOT = os.path.join(BASE_DIR, 'private_media')
SENDFILE_URL = '/private' # URL interna, não precisa ser servida publicamente


# Tamanho máximo de upload (5MB)
DATA_UPLOAD_MAX_MEMORY_SIZE = 5242880
FILE_UPLOAD_MAX_MEMORY_SIZE = 5242880

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Configuração de E-mail para DESENVOLVIMENTO (imprime no console)
EMAIL_BACKEND = 'EMAIL_BACKEND'
EMAIL_HOST = 'EMAIL_HOST'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'EMAIL_HOST_USER'
EMAIL_HOST_PASSWORD = 'MAIL_HOST_PASSWORD'
DEFAULT_FROM_EMAIL = 'DEFAULT_FROM_EMAIL'


# Configurações DRF
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10
}

# LOGIN_URL, LOGIN_REDIRECT_URL, LOGOUT_REDIRECT_URL
LOGIN_URL = 'usuario:login'
LOGIN_REDIRECT_URL = 'usuario:profile'
LOGOUT_REDIRECT_URL = 'usuario:login'

