# Generated by Django 5.1.6 on 2025-04-13 01:06

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Carro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('placa', models.CharField(help_text='Formato: AAA1A11 ou AAA1111', max_length=10, unique=True, validators=[django.core.validators.RegexValidator(message='Formato de placa inválido. Use AAA1A11 ou AAA1111', regex='^[A-Z]{3}\\d{1}[A-Z]{1}\\d{2}$|^[A-Z]{3}\\d{4}$')], verbose_name='Placa do Veículo')),
                ('modelo', models.CharField(max_length=50, verbose_name='Modelo do Veículo')),
                ('marca', models.CharField(max_length=50, verbose_name='Marca do Veículo')),
                ('cor', models.CharField(max_length=30, verbose_name='Cor do Veículo')),
                ('ano', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1900, message='Ano mínimo permitido é 1900'), django.core.validators.MaxValueValidator(2026, message='Ano não pode ser no futuro')], verbose_name='Ano de Fabricação')),
                ('renavan', models.CharField(help_text='Número único do Registro Nacional de Veículos', max_length=20, unique=True, verbose_name='Número do RENAVAM')),
                ('data_ultima_manutencao', models.DateField(blank=True, null=True, verbose_name='Data da Última Manutenção')),
                ('data_proxima_manutencao', models.DateField(blank=True, null=True, verbose_name='Data da Próxima Manutenção')),
                ('ativo', models.BooleanField(default=True, verbose_name='Veículo Ativo na Frota')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
            ],
            options={
                'verbose_name': 'Veículo',
                'verbose_name_plural': 'Veículos',
                'db_table': 'automovel_carro',
                'ordering': ['marca', 'modelo'],
                'indexes': [models.Index(fields=['placa'], name='idx_carro_placa'), models.Index(fields=['marca', 'modelo'], name='idx_carro_marca_modelo')],
                'constraints': [models.UniqueConstraint(fields=('placa', 'renavan'), name='unique_placa_renavan')],
            },
        ),
        migrations.CreateModel(
            name='Agendamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('funcionario', models.CharField(max_length=100, verbose_name='Funcionário Responsável')),
                ('data_hora_agenda', models.DateTimeField(verbose_name='Data/Hora do Agendamento')),
                ('data_hora_devolucao', models.DateTimeField(blank=True, null=True, verbose_name='Data/Hora da Devolução')),
                ('cm', models.CharField(max_length=20, verbose_name='Código da Missão (CM)')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição do Agendamento')),
                ('pedagio', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], default='N', max_length=1, verbose_name='Pedágio Necessário?')),
                ('abastecimento', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], default='N', max_length=1, verbose_name='Abastecimento Necessário?')),
                ('km_inicial', models.PositiveIntegerField(verbose_name='Quilometragem Inicial')),
                ('km_final', models.PositiveIntegerField(blank=True, null=True, verbose_name='Quilometragem Final')),
                ('fotos', models.ImageField(blank=True, null=True, upload_to='agendamentos/%Y/%m/%d/', verbose_name='Fotos do Veículo')),
                ('assinatura', models.TextField(blank=True, verbose_name='Assinatura Digital')),
                ('responsavel', models.CharField(max_length=100, verbose_name='Responsável pelo Agendamento')),
                ('ocorrencia', models.TextField(blank=True, verbose_name='Ocorrências Durante o Uso')),
                ('status', models.CharField(choices=[('agendado', 'Agendado'), ('em_andamento', 'Em Andamento'), ('concluido', 'Concluído'), ('cancelado', 'Cancelado')], default='agendado', max_length=20, verbose_name='Status do Agendamento')),
                ('cancelar_agenda', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], default='N', max_length=1, verbose_name='Cancelar Agendamento?')),
                ('motivo_cancelamento', models.TextField(blank=True, null=True, verbose_name='Motivo do Cancelamento')),
                ('carro', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='agendamentos', to='automovel.carro', verbose_name='Veículo')),
            ],
            options={
                'verbose_name': 'Agendamento de Veículo',
                'verbose_name_plural': 'Agendamentos de Veículos',
                'db_table': 'automovel_agendamento',
                'ordering': ['-data_hora_agenda'],
                'indexes': [models.Index(fields=['data_hora_agenda'], name='idx_data_agenda'), models.Index(fields=['carro'], name='idx_agendamento_carro'), models.Index(fields=['status'], name='idx_agendamento_status')],
                'constraints': [models.CheckConstraint(condition=models.Q(('data_hora_devolucao__gt', models.F('data_hora_agenda'))), name='check_data_devolucao_maior'), models.CheckConstraint(condition=models.Q(('km_final__gte', models.F('km_inicial'))), name='check_km_final_maior')],
            },
        ),
    ]
