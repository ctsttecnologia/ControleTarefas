# Generated by Django 5.2 on 2024-05-03 00:00

from django.db import migrations, models
import django.db.models.deletion
from django.core.validators import MinValueValidator, MaxValueValidator, RegexValidator
import django.utils.timezone
from django.conf import settings


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Carro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('placa', models.CharField(max_length=10, unique=True, validators=[RegexValidator(regex='^[A-Z]{3}\\d{1}[A-Z]{1}\\d{2}$|^[A-Z]{3}\\d{4}$')], verbose_name='Placa do Veículo')),
                ('modelo', models.CharField(max_length=50, verbose_name='Modelo do Veículo')),
                ('marca', models.CharField(max_length=50, verbose_name='Marca do Veículo')),
                ('cor', models.CharField(max_length=30, verbose_name='Cor do Veículo')),
                ('ano', models.PositiveIntegerField(validators=[MinValueValidator(1900), MaxValueValidator(django.utils.timezone.now().year + 1)], verbose_name='Ano de Fabricação')),
                ('renavan', models.CharField(max_length=20, unique=True, verbose_name='Número do RENAVAM')),
                ('status', models.CharField(blank=True, choices=[('disponivel', 'Disponível'), ('manutencao', 'Em Manutenção'), ('locado', 'Locado')], default='disponivel', max_length=20, null=True, verbose_name='Status')),
                ('data_ultima_manutencao', models.DateField(blank=True, null=True, verbose_name='Data da Última Manutenção')),
                ('data_proxima_manutencao', models.DateField(blank=True, null=True, verbose_name='Data da Próxima Manutenção')),
                ('ativo', models.BooleanField(default=True, verbose_name='Veículo Ativo na Frota')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
            ],
            options={
                'db_table': 'automovel_carro',
                'verbose_name': 'Veículo',
                'verbose_name_plural': 'Veículos',
                'ordering': ['marca', 'modelo'],
                'indexes': [models.Index(fields=['placa'], name='idx_carro_placa'), models.Index(fields=['marca', 'modelo'], name='idx_carro_marca_modelo')],
                'constraints': [models.UniqueConstraint(fields=['placa', 'renavan'], name='unique_placa_renavan')],
            },
        ),
        migrations.CreateModel(
            name='Agendamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('funcionario', models.CharField(max_length=100, verbose_name='Funcionário Responsável')),
                ('data_hora_agenda', models.DateTimeField(verbose_name='Data/Hora do Agendamento')),
                ('data_hora_devolucao', models.DateTimeField(blank=True, null=True, verbose_name='Data/Hora da Devolução')),
                ('cm', models.CharField(max_length=20, verbose_name='Código do Contrato (CM)')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição do Agendamento')),
                ('pedagio', models.BooleanField(default=False, verbose_name='Pedágio Necessário?')),
                ('abastecimento', models.BooleanField(default=False, verbose_name='Abastecimento Necessário?')),
                ('km_inicial', models.PositiveIntegerField(verbose_name='Quilometragem Inicial')),
                ('km_final', models.PositiveIntegerField(blank=True, null=True, verbose_name='Quilometragem Final')),
                ('foto_principal', models.ImageField(blank=True, null=True, upload_to='agendamentos/%Y/%m/%d/', verbose_name='Foto Principal do Veículo')),
                ('assinatura', models.ImageField(blank=True, null=True, upload_to='assinaturas/%Y/%m/%d/', verbose_name='Assinatura Digital')),
                ('responsavel', models.CharField(max_length=100, verbose_name='Responsável pelo Agendamento')),
                ('ocorrencia', models.TextField(blank=True, verbose_name='Ocorrências Durante o Uso')),
                ('status', models.CharField(choices=[('agendado', 'Agendado'), ('em_andamento', 'Em Andamento'), ('concluido', 'Concluído'), ('cancelado', 'Cancelado')], default='agendado', max_length=20, verbose_name='Status do Agendamento')),
                ('cancelar_agenda', models.BooleanField(default=False, verbose_name='Cancelar Agendamento?')),
                ('motivo_cancelamento', models.TextField(blank=True, null=True, verbose_name='Motivo do Cancelamento')),
                ('carro', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='agendamentos', to='automovel.carro', verbose_name='Veículo')),
            ],
            options={
                'db_table': 'agendamento',
                'verbose_name': 'Agendamento de Veículo',
                'verbose_name_plural': 'Agendamentos de Veículos',
                'ordering': ['-data_hora_agenda'],
            },
        ),
        migrations.CreateModel(
            name='FotoAgendamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imagem', models.ImageField(upload_to='agendamentos/fotos/')),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('observacao', models.TextField(blank=True, null=True)),
                ('agendamento', models.ForeignKey(db_column='agendamento_id', on_delete=django.db.models.deletion.CASCADE, related_name='fotos', to='automovel.agendamento')),
            ],
        ),
        migrations.CreateModel(
            name='Checklist_Carro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('saida', 'Saída'), ('retorno', 'Retorno')], max_length=10)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('km_inicial', models.PositiveIntegerField(validators=[MinValueValidator(0)])),
                ('km_final', models.PositiveIntegerField(blank=True, null=True, validators=[MinValueValidator(0)])),
                ('revisao_frontal_status', models.CharField(choices=[('ok', 'OK'), ('avaria', 'Com Avarias'), ('nao_verificado', 'Não Verificado')], default='nao_verificado', max_length=15)),
                ('foto_frontal', models.ImageField(blank=True, null=True, upload_to='checklist/frontal/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png'])])),
                ('coordenadas_avaria_frontal', models.CharField(blank=True, null=True)),
                ('revisao_trazeira_status', models.CharField(choices=[('ok', 'OK'), ('avaria', 'Com Avarias'), ('nao_verificado', 'Não Verificado')], default='nao_verificado', max_length=15)),
                ('foto_trazeira', models.ImageField(blank=True, null=True, upload_to='checklist/trazeira/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png'])])),
                ('coordenadas_avaria_trazeira', models.CharField(blank=True, null=True)),
                ('revisao_lado_motorista_status', models.CharField(choices=[('ok', 'OK'), ('avaria', 'Com Avarias'), ('nao_verificado', 'Não Verificado')], default='nao_verificado', max_length=15)),
                ('foto_lado_motorista', models.ImageField(blank=True, null=True, upload_to='checklist/lado_motorista/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png'])])),
                ('coordenadas_avaria_lado_motorista', models.CharField(blank=True, null=True)),
                ('revisao_lado_passageiro_status', models.CharField(choices=[('ok', 'OK'), ('avaria', 'Com Avarias'), ('nao_verificado', 'Não Verificado')], default='nao_verificado', max_length=15)),
                ('foto_lado_passageiro', models.ImageField(blank=True, null=True, upload_to='checklist/lado_passageiro/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png'])])),
                ('coordenadas_lado_passageiro', models.CharField(blank=True, null=True)),
                ('observacoes_gerais', models.TextField(blank=True, null=True, verbose_name='Ocorrências')),
                ('anexo_ocorrencia', models.FileField(blank=True, null=True, upload_to='checklist/ocorrencias/')),
                ('assinatura', models.TextField(blank=True, null=True)),
                ('confirmacao', models.BooleanField(default=False)),
                ('agendamento', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='checklists', to='automovel.agendamento', verbose_name='Agendamento')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'checklist_carro',
                'verbose_name': 'Checklist de Veículo',
                'verbose_name_plural': 'Checklists de Veículos',
                'ordering': ['-data_criacao'],
                'constraints': [models.UniqueConstraint(fields=['agendamento', 'tipo'], name='unique_checklist_por_tipo')],
            },
        ),
        migrations.AddConstraint(
            model_name='agendamento',
            constraint=models.CheckConstraint(check=models.Q(('data_hora_devolucao__gt', models.F('data_hora_agenda'))), name='check_data_devolucao_maior'),
        ),
        migrations.AddConstraint(
            model_name='agendamento',
            constraint=models.CheckConstraint(check=models.Q(('km_final__gte', models.F('km_inicial'))), name='check_km_final_maior'),
        ),
    ]

