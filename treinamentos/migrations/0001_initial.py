# Generated by Django 5.1.6 on 2025-04-13 01:06

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='TipoTreinamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome descritivo do tipo de treinamento', max_length=100, unique=True, verbose_name='Nome do Tipo')),
                ('modalidade', models.CharField(choices=[('I', 'Interno'), ('E', 'Externo'), ('H', 'Híbrido'), ('O', 'Online')], help_text='Forma de realização do treinamento', max_length=1, verbose_name='Modalidade')),
                ('area', models.CharField(choices=[('TEC', 'Tecnologia'), ('ADM', 'Administrativo'), ('OPR', 'Operacional'), ('SEG', 'Segurança'), ('SAU', 'Saúde'), ('OUT', 'Outros')], default='OUT', max_length=3, verbose_name='Área de Conhecimento')),
                ('descricao', models.TextField(blank=True, help_text='Detalhes sobre este tipo de treinamento', null=True, verbose_name='Descrição')),
                ('certificado', models.BooleanField(default=True, verbose_name='Emite Certificado?')),
                ('validade_meses', models.PositiveIntegerField(default=12, help_text='Validade padrão do treinamento em meses', verbose_name='Validade em Meses')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo?')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
            ],
            options={
                'verbose_name': 'Tipo de Treinamento',
                'verbose_name_plural': 'Tipos de Treinamento',
                'ordering': ['nome'],
                'indexes': [models.Index(fields=['nome'], name='idx_tipo_treinamento_nome'), models.Index(fields=['modalidade'], name='idx_tipo_treina_modalidade'), models.Index(fields=['area'], name='idx_tipo_treinamento_area')],
            },
        ),
        migrations.CreateModel(
            name='Treinamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome completo do treinamento', max_length=200, verbose_name='Nome do Treinamento')),
                ('data_inicio', models.DateTimeField(verbose_name='Data de Início')),
                ('data_vencimento', models.DateField(help_text='Data de validade do treinamento', verbose_name='Data de Vencimento')),
                ('duracao', models.PositiveIntegerField(help_text='Duração total em horas', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Duração (horas)')),
                ('atividade', models.CharField(help_text='Atividade ou processo relacionado', max_length=200, verbose_name='Atividade Relacionada')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição Detalhada')),
                ('funcionario', models.CharField(help_text='Funcionário responsável pela organização', max_length=100, verbose_name='Responsável')),
                ('cm', models.CharField(help_text='Coordenador ou mentor do treinamento', max_length=100, verbose_name='Coordenador/Mentor')),
                ('palestrante', models.CharField(help_text='Nome do palestrante ou instrutor', max_length=100, verbose_name='Palestrante/Instrutor')),
                ('hxh', models.PositiveIntegerField(help_text='Horas necessárias por participante', verbose_name='Horas por Participante')),
                ('status', models.CharField(choices=[('P', 'Planejado'), ('A', 'Agendado'), ('E', 'Em Andamento'), ('C', 'Concluído'), ('X', 'Cancelado')], default='P', max_length=1, verbose_name='Status')),
                ('local', models.CharField(blank=True, max_length=200, null=True, verbose_name='Local do Treinamento')),
                ('custo', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Custo Estimado')),
                ('participantes_previstos', models.PositiveIntegerField(default=0, verbose_name='Participantes Previstos')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('tipo_treinamento', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='treinamentos', to='treinamentos.tipotreinamento', verbose_name='Tipo de Treinamento')),
            ],
            options={
                'verbose_name': 'Treinamento',
                'verbose_name_plural': 'Treinamentos',
                'ordering': ['-data_inicio'],
                'indexes': [models.Index(fields=['tipo_treinamento'], name='idx_treinamento_tipo'), models.Index(fields=['data_inicio'], name='idx_treinamento_data'), models.Index(fields=['status'], name='idx_treinamento_status')],
                'constraints': [models.CheckConstraint(condition=models.Q(('data_vencimento__gte', models.F('data_inicio'))), name='check_data_vencimento_maior_inicio'), models.CheckConstraint(condition=models.Q(('hxh__lte', models.F('duracao'))), name='check_hxh_menor_duracao')],
            },
        ),
    ]
