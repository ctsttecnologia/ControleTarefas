# Generated by Django 5.2 on 2025-09-08 22:12

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('usuario', '0003_remove_usuario_filial_usuario_filiais_permitidas_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TipoCurso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True, verbose_name='Nome do Curso')),
                ('modalidade', models.CharField(choices=[('P', 'Presencial'), ('O', 'Online'), ('H', 'Híbrido')], max_length=1, verbose_name='Modalidade')),
                ('area', models.CharField(choices=[('ADM', 'Administrativo'), ('COM', 'Comportamental'), ('GRA', 'Graduação'), ('INT', 'Integração'), ('LID', 'Liderança'), ('MOT', 'Motivacional'), ('OPE', 'Operacional'), ('PRO', 'Profissionalizante'), ('SAU', 'Saúde'), ('SEG', 'Segurança'), ('TEC', 'Técnico')], max_length=3, verbose_name='Área de Conhecimento')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('certificado', models.BooleanField(default=True, verbose_name='Emite Certificado?')),
                ('validade_meses', models.PositiveIntegerField(help_text='Insira 0 se o certificado não tiver validade.', verbose_name='Validade do Certificado (meses)')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('filial', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='tipocursos', to='usuario.filial', verbose_name='Filial')),
            ],
            options={
                'verbose_name': 'Tipo de Curso',
                'verbose_name_plural': 'Tipos de Cursos',
                'db_table': 'tipocurso',
                'ordering': ['nome'],
                'permissions': [('ativar_tipocurso', 'Pode ativar/desativar tipo de curso'), ('relatorio_tipocurso', 'Pode gerar relatórios de tipos de curso')],
            },
        ),
        migrations.CreateModel(
            name='Treinamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome do Treinamento')),
                ('data_inicio', models.DateTimeField(verbose_name='Data de Início')),
                ('data_vencimento', models.DateField(verbose_name='Data de Vencimento')),
                ('duracao', models.IntegerField(verbose_name='Duração (horas)')),
                ('atividade', models.CharField(blank=True, max_length=200, verbose_name='Atividade Relacionada')),
                ('descricao', models.TextField(verbose_name='Descrição Detalhada')),
                ('cm', models.CharField(blank=True, max_length=100, verbose_name='CM (Centro de Custo?)')),
                ('palestrante', models.CharField(max_length=100, verbose_name='Palestrante/Instrutor')),
                ('horas_homem', models.PositiveIntegerField(null=True, verbose_name='HxH (Horas Homem)')),
                ('centro_custo', models.CharField(blank=True, max_length=100, verbose_name='CM (Centro de Custo)')),
                ('status', models.CharField(choices=[('P', 'Planejado'), ('A', 'Em Andamento'), ('C', 'Cancelado'), ('F', 'Finalizado')], default='P', max_length=1, verbose_name='Status')),
                ('local', models.CharField(max_length=200, verbose_name='Local')),
                ('custo', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Custo Total')),
                ('participantes_previstos', models.IntegerField(verbose_name='Nº de Participantes Previstos')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
                ('filial', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='treinamentos', to='usuario.filial', verbose_name='Filial')),
                ('responsavel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='treinamentos_responsavel', to=settings.AUTH_USER_MODEL, verbose_name='Responsável')),
                ('tipo_curso', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='treinamentos.tipocurso', verbose_name='Tipo de Curso')),
            ],
            options={
                'verbose_name': 'Treinamento',
                'verbose_name_plural': 'Treinamentos',
                'db_table': 'treinamento',
                'ordering': ['-data_inicio'],
                'permissions': [('gerenciar_participantes', 'Pode gerenciar participantes do treinamento'), ('alterar_status', 'Pode alterar status do treinamento'), ('gerar_certificados', 'Pode gerar certificados de treinamento')],
            },
        ),
        migrations.CreateModel(
            name='Participante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome do funcionário')),
                ('presente', models.BooleanField(default=False, verbose_name='Presença Confirmada')),
                ('nota_avaliacao', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Nota da Avaliação')),
                ('certificado_emitido', models.BooleanField(default=False, verbose_name='Certificado Emitido')),
                ('data_registro', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Data de Registro')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Funcionário')),
                ('treinamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participantes', to='treinamentos.treinamento', verbose_name='Treinamento')),
            ],
            options={
                'verbose_name': 'Participante',
                'verbose_name_plural': 'Participantes',
                'db_table': 'participante',
                'permissions': [('registrar_presenca', 'Pode registrar presença de participantes'), ('emitir_certificado', 'Pode emitir certificado para participante'), ('avaliar_participante', 'Pode avaliar participante')],
                'constraints': [models.UniqueConstraint(fields=('treinamento', 'funcionario'), name='inscricao_unica_por_aluno')],
            },
        ),
    ]
