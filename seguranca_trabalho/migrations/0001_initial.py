# Generated by Django 5.2 on 2025-07-05 20:50

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Equipamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=150, verbose_name='Nome do Equipamento')),
                ('modelo', models.CharField(blank=True, max_length=100, verbose_name='Modelo')),
                ('certificado_aprovacao', models.CharField(blank=True, help_text='Deixe em branco se não aplicável.', max_length=50, verbose_name='Certificado de Aprovação (CA)')),
                ('data_validade_ca', models.DateField(blank=True, null=True, verbose_name='Data de Validade do CA')),
                ('vida_util_dias', models.PositiveIntegerField(help_text='Vida útil em dias após a entrega, conforme fabricante.', verbose_name='Vida Útil (dias)')),
                ('estoque_minimo', models.PositiveIntegerField(default=5, verbose_name='Estoque Mínimo')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('requer_numero_serie', models.BooleanField(default=False, help_text='Marque se cada item individual precisa ser rastreado.', verbose_name='Requer Rastreamento por Nº de Série?')),
                ('foto', models.ImageField(blank=True, null=True, upload_to='epi_fotos/', verbose_name='Foto do Equipamento')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={
                'verbose_name': 'Equipamento (EPI)',
                'verbose_name_plural': 'Equipamentos (EPIs)',
                'db_table': 'equipamento',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Fabricante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=150, unique=True, verbose_name='Nome do Fabricante')),
                ('cnpj', models.CharField(blank=True, max_length=18, null=True, verbose_name='CNPJ')),
                ('ativo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Fabricante',
                'verbose_name_plural': 'Fabricantes',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='FichaEPI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_admissao', models.DateField()),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Ficha de EPI',
                'verbose_name_plural': 'Fichas de EPI',
                'db_table': 'fichaepi',
                'ordering': ['-funcionario__nome_completo'],
            },
        ),
        migrations.CreateModel(
            name='Fornecedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('razao_social', models.CharField(max_length=255, verbose_name='Razão Social')),
                ('nome_fantasia', models.CharField(blank=True, max_length=255, verbose_name='Nome Fantasia')),
                ('cnpj', models.CharField(max_length=18, unique=True, verbose_name='CNPJ')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='E-mail de Contato')),
                ('telefone', models.CharField(blank=True, max_length=20, verbose_name='Telefone de Contato')),
                ('ativo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Fornecedor',
                'verbose_name_plural': 'Fornecedores',
                'db_table': 'fornecedor',
                'ordering': ['nome_fantasia'],
            },
        ),
        migrations.CreateModel(
            name='Funcao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True, verbose_name='Nome da Função')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição das Atividades')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={
                'verbose_name': 'Função',
                'verbose_name_plural': 'Funções',
                'db_table': 'funcao',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='MatrizEPI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade_padrao', models.PositiveIntegerField(default=1, verbose_name='Quantidade Padrão')),
            ],
            options={
                'verbose_name': 'Matriz de EPI por Função',
                'verbose_name_plural': 'Matrizes de EPI por Função',
                'db_table': 'matrizepi',
            },
        ),
        migrations.CreateModel(
            name='MovimentacaoEstoque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('ENTRADA', 'Entrada'), ('SAIDA', 'Saída'), ('AJUSTE', 'Ajuste')], max_length=7)),
                ('quantidade', models.IntegerField()),
                ('lote', models.CharField(blank=True, max_length=100, verbose_name='Lote')),
                ('data_validade_fabricante', models.DateField(blank=True, null=True, verbose_name='Validade do Produto (Fabricante)')),
                ('custo_unitario', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Custo Unitário')),
                ('data', models.DateTimeField(default=django.utils.timezone.now)),
                ('justificativa', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Movimentação de Estoque',
                'verbose_name_plural': 'Movimentações de Estoque',
                'db_table': 'movimentacaoestoque',
                'ordering': ['-data'],
            },
        ),
        migrations.CreateModel(
            name='EntregaEPI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.PositiveIntegerField(default=1)),
                ('lote', models.CharField(blank=True, max_length=100, verbose_name='Lote de Fabricação')),
                ('numero_serie', models.CharField(blank=True, max_length=100, verbose_name='Número de Série')),
                ('data_entrega', models.DateTimeField(default=django.utils.timezone.now)),
                ('assinatura_recebimento', models.TextField(blank=True, null=True)),
                ('data_devolucao', models.DateTimeField(blank=True, null=True)),
                ('equipamento', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='seguranca_trabalho.equipamento')),
            ],
            options={
                'verbose_name': 'Entrega de EPI',
                'verbose_name_plural': 'Entregas de EPI',
                'ordering': ['-data_entrega'],
            },
        ),
        migrations.AddField(
            model_name='equipamento',
            name='fabricante',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='equipamentos', to='seguranca_trabalho.fabricante'),
        ),
    ]
