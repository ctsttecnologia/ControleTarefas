# Generated by Django 5.1.6 on 2025-04-13 01:06

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('epi', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EquipamentosSeguranca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_equipamento', models.CharField(help_text='Nome completo do equipamento', max_length=100, verbose_name='Nome do Equipamento')),
                ('tipo', models.CharField(choices=[('EPI', 'Equipamento de Proteção Individual'), ('EPC', 'Equipamento de Proteção Coletiva'), ('INC', 'Incêndio'), ('SOC', 'Socorro'), ('OUT', 'Outros')], default='EPI', max_length=3, verbose_name='Tipo de Equipamento')),
                ('codigo_ca', models.CharField(db_column='codigo_CA', help_text='Código de aprovação no formato AA-1234', max_length=10, unique=True, validators=[django.core.validators.RegexValidator(message='Formato do CA deve ser AA-1234', regex='^[A-Z]{2}-\\d{4}$')], verbose_name='Código CA')),
                ('descricao', models.TextField(help_text='Descrição detalhada do equipamento', verbose_name='Descrição')),
                ('quantidade_estoque', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Quantidade em Estoque')),
                ('estoque_minimo', models.PositiveIntegerField(default=5, help_text='Quantidade mínima para alerta de reposição', verbose_name='Estoque Mínimo')),
                ('data_validade', models.DateField(blank=True, help_text='Validade do certificado de aprovação', null=True, verbose_name='Data de Validade')),
                ('ativo', models.IntegerField(choices=[(1, 'Ativo'), (0, 'Inativo')], default=1, verbose_name='Status')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
            ],
            options={
                'verbose_name': 'Equipamento de Segurança',
                'verbose_name_plural': 'Equipamentos de Segurança',
                'db_table': 'equipamentos_seguranca',
                'ordering': ['tipo', 'nome_equipamento'],
            },
        ),
        migrations.CreateModel(
            name='ItemEquipamentoSeguranca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Quantidade')),
                ('data_entrega', models.DateField(default=django.utils.timezone.now, verbose_name='Data de Entrega')),
                ('data_devolucao', models.DateField(blank=True, null=True, verbose_name='Data de Devolução')),
                ('responsavel_entrega', models.CharField(max_length=100, verbose_name='Responsável pela Entrega')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('equipamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seguranca_trabalho.equipamentosseguranca', verbose_name='Equipamento')),
                ('ficha', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='epi.fichaepi', verbose_name='Ficha EPI')),
            ],
            options={
                'verbose_name': 'Item de Equipamento de Segurança',
                'verbose_name_plural': 'Itens de Equipamentos de Segurança',
                'db_table': 'itens_equipamento_seguranca',
                'unique_together': {('ficha', 'equipamento')},
            },
        ),
        migrations.AddField(
            model_name='equipamentosseguranca',
            name='fichas_epi',
            field=models.ManyToManyField(related_name='equipamentos', through='seguranca_trabalho.ItemEquipamentoSeguranca', to='epi.fichaepi', verbose_name='Fichas EPI Associadas'),
        ),
        migrations.AddIndex(
            model_name='equipamentosseguranca',
            index=models.Index(fields=['tipo'], name='idx_tipo_equipamento'),
        ),
        migrations.AddIndex(
            model_name='equipamentosseguranca',
            index=models.Index(fields=['codigo_ca'], name='idx_codigo_ca'),
        ),
        migrations.AddIndex(
            model_name='equipamentosseguranca',
            index=models.Index(fields=['ativo'], name='idx_status_equipamento'),
        ),
        migrations.AddConstraint(
            model_name='equipamentosseguranca',
            constraint=models.CheckConstraint(condition=models.Q(('quantidade_estoque__gte', 0)), name='check_quantidade_estoque_positiva'),
        ),
        migrations.AddConstraint(
            model_name='equipamentosseguranca',
            constraint=models.CheckConstraint(condition=models.Q(('estoque_minimo__gte', 1)), name='check_estoque_minimo_positivo'),
        ),
    ]
